namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: UsrRealtyServiceSchema

	/// <exclude/>
	public class UsrRealtyServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public UsrRealtyServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public UsrRealtyServiceSchema(UsrRealtyServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("14ff388a-5456-4bca-838d-9cc1b88106be");
			Name = "UsrRealtyService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("c7396a38-aba5-4814-849c-953cb5a97f16");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,205,84,205,78,219,64,16,190,87,202,59,108,125,178,165,96,212,107,41,149,72,27,80,90,133,32,12,226,128,114,216,216,19,88,117,189,54,187,179,20,11,120,180,170,143,212,87,232,172,119,147,216,85,74,68,79,93,89,178,61,243,205,223,247,121,172,120,9,166,230,57,176,11,208,154,155,106,137,233,167,74,45,197,141,213,28,69,165,6,143,3,70,199,26,161,110,88,214,24,132,50,205,64,223,139,28,166,85,1,242,224,101,119,122,5,139,93,144,163,28,197,125,91,172,139,236,246,163,33,253,60,218,238,164,252,4,40,203,126,176,47,179,165,176,131,103,96,12,21,203,144,35,120,200,117,232,135,38,71,205,115,156,59,227,254,62,43,173,65,15,56,50,245,41,32,21,170,169,209,133,144,2,155,115,184,179,66,67,9,10,77,220,125,113,83,177,67,182,35,196,161,210,96,40,146,185,171,199,139,66,56,26,184,100,28,81,139,133,69,24,188,113,245,107,187,144,34,103,185,228,198,176,115,224,18,155,208,50,123,207,70,220,64,120,27,178,9,121,139,153,146,77,119,202,118,6,63,211,86,63,219,99,191,126,254,240,215,230,233,85,23,139,183,216,54,79,147,44,75,218,46,30,215,189,92,207,106,240,223,216,154,246,141,143,116,154,168,251,234,27,196,83,192,219,170,32,62,163,179,89,118,17,13,217,168,42,154,12,27,233,56,38,216,148,230,224,55,176,182,166,87,154,215,53,20,195,117,50,119,28,209,96,240,184,210,37,199,94,160,55,165,95,76,165,134,4,51,117,165,12,188,140,75,230,131,117,242,160,76,1,185,40,73,183,19,192,41,127,56,211,164,197,168,185,104,106,152,20,177,33,41,233,11,212,173,108,222,54,100,61,227,108,185,4,237,61,201,58,243,99,111,0,177,100,33,81,58,49,167,86,202,153,30,151,53,54,113,55,109,194,158,158,216,11,168,110,157,164,151,190,95,204,29,13,104,181,98,123,239,14,122,174,103,255,65,174,78,6,18,114,100,198,223,14,153,130,239,193,22,95,26,208,164,172,162,103,210,56,233,199,253,121,104,135,165,45,85,124,108,85,158,18,131,113,116,105,116,75,99,148,236,10,61,214,85,217,226,253,98,68,187,240,87,183,160,161,13,240,84,68,9,145,53,190,179,92,198,190,139,244,140,107,250,47,34,232,216,205,115,98,69,209,167,121,103,75,71,170,104,11,116,8,127,69,149,158,76,59,74,113,19,248,238,203,180,250,30,53,24,43,157,48,94,161,116,252,0,57,253,85,178,156,75,174,63,4,212,199,56,233,71,7,237,125,240,198,245,252,239,187,123,50,254,111,86,119,149,55,108,110,88,68,90,220,241,3,47,107,9,241,223,86,48,176,18,205,190,190,141,186,164,12,252,237,249,55,0,99,73,133,76,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("14ff388a-5456-4bca-838d-9cc1b88106be"));
		}

		#endregion

	}

	#endregion

}

